using System;
using System.Collections;
using System.Linq;
using System.Text;

namespace InsertionSort
{

    class InsertSort
    {
        public enum Cases { WORST, BEST, AVERAGE };

        public static int[] GenerateArray(int length, Cases cases)
        {
            int[] mas = new int[length];
            Random r = new Random();
            for (int i = 0; i < mas.Length; i++)
            {
                mas[i] = r.Next(0, 300000000);
            }

            if (cases == Cases.WORST)
            {
                Array.Sort(mas);
                mas.Reverse();
                return mas;

            }

            else if (cases == Cases.BEST)
            {
                Array.Sort(mas);
                return mas;

            }

            else
            {
                return mas;
            }
        }

        public static void InsertionSort(int[] mas)
        {
            for (int i = 1; i < mas.Length; i++)
            {
                int now_elem = mas[i];
                int j = i;
                while (j > 0 && now_elem < mas[j - 1])
                {
                    mas[j] = mas[j - 1];
                    j = j -1;
                }
                mas[j] = now_elem;
            }

        }

        public static bool isArrayCorrectSort(int[] ar, int[] orig)
        {
            Array.Sort(orig);

            for (int i = 0; i < ar.Length; i++)
            {
                if (ar[i] != orig[i])
                {
                    return false;
                }
            }

            return true;
        }

        public static int[] copyArray(int[] orig)
        {
            int[] newArray = new int[orig.Length];

            for (int i = 0; i < orig.Length; i++)
            {
                newArray[i] = orig[i];
            }

            return newArray;
        }


        static void Main(string[] args)
        {
            Console.WriteLine("Ââåäèòå êîëè÷åñòâî ÷èñåë äëÿ ñîðòèðîâêè: ");

            int N = Convert.ToInt32(Console.ReadLine());

            int[] bestCaseArray = GenerateArray(N, Cases.BEST);

            // êîïèðóåì ñîçäàííûé ìàññèâ â êîïèþ
            int[] copyBestCaseArray = copyArray(bestCaseArray);

            System.Diagnostics.Stopwatch Time = new System.Diagnostics.Stopwatch();
            Time.Start();
            InsertionSort(bestCaseArray);
            Time.Stop();

            Console.WriteLine("\nÂðåìÿ ñîðòèðîâêè äëÿ ëó÷øåãî ñëó÷àÿ " + Time.Elapsed.TotalMilliseconds);

            // ÏÐÎÂÅÐßÅÌ ÊÎÐÐÅÊÒÍÎÑÒÜ ÑÎÐÒÈÐÎÂÊÈ
            if (isArrayCorrectSort(bestCaseArray, copyBestCaseArray))
            {
                Console.WriteLine("CORRECT");
            }
            else
            {
                Console.WriteLine("INCORRECT");
            }


            int[] worstCaseArray = GenerateArray(N, Cases.AVERAGE);

            // êîïèðóåì ñîçäàííûé ìàññèâ â êîïèþ
            int[] copyWorstCaseArray = copyArray(worstCaseArray);

            Time.Start();
            InsertionSort(worstCaseArray);
            Time.Stop();

            Console.WriteLine("\nÂðåìÿ ñîðòèðîâêè äëÿ ñðåäíåãî ñëó÷àÿ " + Time.Elapsed.TotalMilliseconds);

            // ÏÐÎÂÅÐßÅÌ ÊÎÐÐÅÊÒÍÎÑÒÜ ÑÎÐÒÈÐÎÂÊÈ
            if (isArrayCorrectSort(worstCaseArray, copyWorstCaseArray))
            {
                Console.WriteLine("CORRECT");
            }
            else
            {
                Console.WriteLine("INCORRECT");
            }

            int[] averageCaseArray = GenerateArray(N, Cases.WORST);

            // êîïèðóåì ñîçäàííûé ìàññèâ â êîïèþ
            int[] copyAveragetCaseArray = copyArray(averageCaseArray);

            Time.Start();
            InsertionSort(averageCaseArray);
            Time.Stop();


            Console.WriteLine("\nÂðåìÿ ñîðòèðîâêè äëÿ õóäøåãî ñëó÷àÿ " + Time.Elapsed.TotalMilliseconds); ;

            // ÏÐÎÂÅÐßÅÌ ÊÎÐÐÅÊÒÍÎÑÒÜ ÑÎÐÒÈÐÎÂÊÈ
            if (isArrayCorrectSort(averageCaseArray, copyAveragetCaseArray))
            {
                Console.WriteLine("CORRECT");
            }
            else
            {
                Console.WriteLine("INCORRECT");
            }

            Console.ReadLine();

        }


    }

}
